# ==============================================
# CONFIGURATION DE SÉCURITÉ - ONE PIECE BOOSTER GAME
# ==============================================

# ⚠️ IMPORTANT: Ne JAMAIS commiter le fichier .env avec de vraies valeurs
# Ce fichier .env.example sert uniquement de template

# ----------------------------------------------
# ENVIRONNEMENT
# ----------------------------------------------
NODE_ENV=production
# Values: development, production, test

# ----------------------------------------------
# SERVEUR
# ----------------------------------------------
PORT=5000

# ----------------------------------------------
# BASE DE DONNÉES
# ----------------------------------------------
DATABASE_PATH=./data/database.sqlite
# Chemin vers le fichier de base de données SQLite

# ----------------------------------------------
# SÉCURITÉ JWT (CRITIQUE - À CHANGER ABSOLUMENT)
# ----------------------------------------------
# ⚠️ GÉNÉRER DES SECRETS FORTS ET UNIQUES EN PRODUCTION
# Utilisez: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

JWT_SECRET=CHANGE_THIS_TO_A_STRONG_RANDOM_SECRET_IN_PRODUCTION_MIN_64_CHARS
# Secret pour signer les tokens d'accès (minimum 64 caractères recommandé)

JWT_REFRESH_SECRET=CHANGE_THIS_TO_ANOTHER_STRONG_RANDOM_SECRET_IN_PRODUCTION_MIN_64_CHARS
# Secret pour signer les tokens de rafraîchissement (doit être différent de JWT_SECRET)

# Durée de vie des tokens
JWT_EXPIRES_IN=15m
# Format: 15m, 1h, 7d, etc.

JWT_REFRESH_EXPIRES_IN=7d
# Format: 15m, 1h, 7d, etc.

# ----------------------------------------------
# BCRYPT
# ----------------------------------------------
BCRYPT_ROUNDS=12
# Nombre de rounds pour le hashage des mots de passe (10-12 recommandé)
# Plus élevé = plus sécurisé mais plus lent

# ----------------------------------------------
# CORS
# ----------------------------------------------
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
# Liste des origines autorisées séparées par des virgules
# En production, spécifier uniquement les domaines autorisés
# Exemple production: ALLOWED_ORIGINS=https://votredomaine.com,https://www.votredomaine.com

# ----------------------------------------------
# RATE LIMITING (optionnel - valeurs par défaut dans le code)
# ----------------------------------------------
# RATE_LIMIT_WINDOW_MS=900000
# RATE_LIMIT_MAX_REQUESTS=200
# RATE_LIMIT_AUTH_MAX=10

# ----------------------------------------------
# LOGGING (optionnel)
# ----------------------------------------------
# LOG_LEVEL=info
# Values: error, warn, info, debug

# ----------------------------------------------
# VEGAPULL DATA SYNC
# ----------------------------------------------
VEGAPULL_DATA_PATH=../data/vegapull
VEGAPULL_IMAGES_PATH=../public/images/cards

# ----------------------------------------------
# ADMIN ACCOUNT (pour seeding uniquement - à supprimer en production)
# ----------------------------------------------
# ADMIN_EMAIL=admin@onepiecegame.com
# ADMIN_PASSWORD=CHANGE_THIS_STRONG_PASSWORD

# ----------------------------------------------
# NOTES DE SÉCURITÉ CRITIQUES
# ----------------------------------------------
# 1. ✅ Toujours utiliser HTTPS en production
# 2. ✅ Changer TOUS les secrets par défaut (JWT_SECRET, JWT_REFRESH_SECRET)
# 3. ✅ Limiter ALLOWED_ORIGINS aux domaines réels en production
# 4. ✅ Ne jamais exposer les credentials admin en production
# 5. ✅ Sauvegarder régulièrement la base de données
# 6. ✅ Mettre à jour les dépendances régulièrement (npm audit)
# 7. ✅ Utiliser un système de gestion des secrets en production (Vault, AWS Secrets Manager, etc.)
# 8. ✅ Activer les logs de sécurité pour le monitoring
# 9. ✅ Configurer un pare-feu et limiter l'accès SSH
# 10. ✅ Utiliser des certificats SSL/TLS valides