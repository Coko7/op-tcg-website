#!/bin/sh
set -e

echo "üöÄ D√©marrage du backend One Piece Booster Game..."

# V√©rifier si la base de donn√©es existe
if [ ! -f "/app/data/database.sqlite" ]; then
  echo "üì¶ Base de donn√©es non trouv√©e. Initialisation..."

  # Ex√©cuter les migrations
  echo "üîÑ Ex√©cution des migrations..."
  node scripts/run-migrations.js

  # Initialiser les achievements
  echo "üèÜ Initialisation des achievements..."
  node scripts/init-achievements.js

  # Migration initiale des qu√™tes depuis JSON (si le fichier existe)
  if [ -f "/app/data/world-map-quests.json" ]; then
    echo "üó∫Ô∏è Migration initiale des qu√™tes depuis JSON..."
    node dist/scripts/migrate-quests-from-json.js || echo "‚ö†Ô∏è Erreur migration qu√™tes (non bloquant)"
  else
    echo "‚ÑπÔ∏è Fichier world-map-quests.json non trouv√©, les qu√™tes seront cr√©√©es par le seed initial"
  fi

  echo "‚úÖ Initialisation termin√©e!"
else
  echo "‚úÖ Base de donn√©es existante trouv√©e"

  # Diagnostic de la base de donn√©es
  echo "üîç Diagnostic de la base de donn√©es..."
  node diagnose-database.js || echo "‚ö†Ô∏è Diagnostic √©chou√© (non bloquant)"
  echo ""

  # Ex√©cuter les migrations pour s'assurer que la DB est √† jour
  echo "üîÑ V√©rification et ex√©cution des migrations..."
  node scripts/run-migrations.js || echo "‚ö†Ô∏è Erreur lors des migrations (peut √™tre normale si d√©j√† √† jour)"

  # Correction de TOUTES les raret√©s des cartes
  echo "üé¥ V√©rification et correction de toutes les raret√©s..."
  node dist/scripts/fix-all-rarities.js || echo "‚ö†Ô∏è Erreur correction raret√©s (non bloquant)"

  # Migration des qu√™tes depuis JSON (si le fichier existe)
  if [ -f "/app/data/world-map-quests.json" ]; then
    echo "üó∫Ô∏è Migration des qu√™tes depuis JSON..."
    node dist/scripts/migrate-quests-from-json.js || echo "‚ö†Ô∏è Erreur migration qu√™tes (non bloquant)"
  else
    echo "‚ÑπÔ∏è Fichier world-map-quests.json non trouv√©, migration des qu√™tes ignor√©e"
  fi

  # V√©rifier si les achievements existent
  ACHIEVEMENT_COUNT=$(sqlite3 /app/data/database.sqlite "SELECT COUNT(*) FROM achievements;" 2>/dev/null || echo "0")

  if [ "$ACHIEVEMENT_COUNT" = "0" ]; then
    echo "üèÜ Aucun achievement trouv√©. Initialisation..."
    node scripts/init-achievements.js
  else
    echo "‚úÖ $ACHIEVEMENT_COUNT achievements trouv√©s dans la base"
  fi
fi

# Configurer les t√¢ches cron pour les backups et le nettoyage
echo "‚è∞ Configuration des t√¢ches cron..."
sh scripts/setup-cron-backup.sh || echo "‚ö†Ô∏è Erreur configuration cron backup (non bloquant)"
sh scripts/setup-cron-cleanup.sh || echo "‚ö†Ô∏è Erreur configuration cron cleanup (non bloquant)"

# Nettoyer les fichiers temporaires et logs anciens au d√©marrage
echo "üßπ Nettoyage initial..."
node scripts/log-rotation.js || echo "‚ö†Ô∏è Erreur nettoyage initial (non bloquant)"

# Envoyer la notification de compensation (si pas d√©j√† envoy√©e)
echo "üéÅ V√©rification notification de compensation..."
node scripts/send-compensation.js || echo "‚ö†Ô∏è Erreur envoi compensation (non bloquant)"

echo ""
echo "üéÆ D√©marrage du serveur..."
echo ""

# Lancer l'application
exec node dist/index.js
