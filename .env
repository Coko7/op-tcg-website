# =============================================================================
# CONFIGURATION DE PRODUCTION - ONE PIECE BOOSTER GAME
# =============================================================================
# Copier ce fichier en .env et remplir avec vos propres valeurs
# IMPORTANT: Ne jamais commiter le fichier .env dans Git !
# =============================================================================

# -----------------------------------------------------------------------------
# CONFIGURATION DES PORTS
# -----------------------------------------------------------------------------
# Port pour le frontend (Nginx)
FRONTEND_PORT=80

# Port pour le backend (API)
BACKEND_PORT=5000


# -----------------------------------------------------------------------------
# CONFIGURATION DE L'API (FRONTEND)
# -----------------------------------------------------------------------------
# URL de l'API backend - Utiliser l'URL complète du backend
# En production sur Raspberry: http://framboise.lan:5000/api
# En développement local: http://localhost:5000/api
VITE_API_URL=http://framboise.lan:5000/api


# -----------------------------------------------------------------------------
# SÉCURITÉ - JWT (BACKEND)
# -----------------------------------------------------------------------------
# Secret pour les tokens JWT - CHANGER IMPÉRATIVEMENT EN PRODUCTION
# Générer avec: openssl rand -base64 32
JWT_SECRET=iKPrZW1XIq0Mg02douXHg9emL0G6zyvwEbWB/D3PTIs=

# Secret pour les refresh tokens - CHANGER IMPÉRATIVEMENT EN PRODUCTION
# Générer avec: openssl rand -base64 32
JWT_REFRESH_SECRET=xPi2W9/rgCiJQo8KBf1bl5Ovlxwuo+ThKB4aZmsQzcc=

# Durée de validité des tokens JWT (format: 15m, 1h, 1d)
JWT_EXPIRES_IN=15m

# Durée de validité des refresh tokens (format: 7d, 30d)
JWT_REFRESH_EXPIRES_IN=7d


# -----------------------------------------------------------------------------
# SÉCURITÉ - BCRYPT (BACKEND)
# -----------------------------------------------------------------------------
# Nombre de rounds pour le hashage bcrypt (10-12 recommandé, plus = plus sécurisé mais plus lent)
BCRYPT_ROUNDS=10


# -----------------------------------------------------------------------------
# COMPTE ADMINISTRATEUR INITIAL (BACKEND)
# -----------------------------------------------------------------------------
# Nom d'utilisateur de l'administrateur
ADMIN_USERNAME=admin

# Email de l'administrateur
ADMIN_EMAIL=admin@votredomaine.com

# Mot de passe de l'administrateur - CHANGER IMPÉRATIVEMENT EN PRODUCTION
ADMIN_PASSWORD=!VotreMotDePasseSecurise123!


# -----------------------------------------------------------------------------
# CORS - ORIGINES AUTORISÉES (BACKEND)
# -----------------------------------------------------------------------------
# Liste des origines autorisées séparées par des virgules
# Ajuster selon votre domaine en production
ALLOWED_ORIGINS=http://localhost,http://localhost:80,http://framboise.lan,https://framboise.lan,http://framboise.lan:9080,http://optcg.polo2409.work,https://optcg.polo2409.work


# -----------------------------------------------------------------------------
# CHEMINS DES DONNÉES (OPTIONNEL)
# -----------------------------------------------------------------------------
# Chemin vers les données Vegapull (si vous les avez en local)
# Laisser par défaut si pas de données locales
# Note: Ces chemins sont utilisés pour le montage des volumes Docker
VEGAPULL_DATA_PATH=./public/data

# Chemin vers les images des cartes (si vous les avez en local)
# Laisser par défaut si pas d'images locales
VEGAPULL_IMAGES_PATH=./public/images


# =============================================================================
# NOTES IMPORTANTES POUR LA PRODUCTION
# =============================================================================
#
# 1. SÉCURITÉ CRITIQUE :
#    - Générez des secrets JWT uniques et forts
#    - Changez le mot de passe admin par défaut
#    - Ne commitez JAMAIS le fichier .env dans Git
#
# 2. ALLOWED_ORIGINS :
#    - Remplacez par votre nom de domaine réel
#    - Incluez http:// ET https:// si vous utilisez SSL
#
# 3. RASPBERRY PI :
#    - Les valeurs par défaut sont optimisées pour Raspberry Pi
#    - BCRYPT_ROUNDS=10 est un bon compromis performance/sécurité
#
# 4. GÉNÉRATION DE SECRETS :
#    Sur Linux/Mac: openssl rand -base64 32
#    Sur Windows: [Convert]::ToBase64String((1..32 | ForEach-Object { Get-Random -Maximum 256 }))
#
# 5. PORTAINER :
#    - Copiez les variables dans la section "Environment variables" du stack
#    - OU créez un fichier .env dans le même dossier que docker-compose.yml
#
# =============================================================================