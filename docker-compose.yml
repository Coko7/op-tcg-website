version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: op-game-backend:latest
    container_name: op-game-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/database.sqlite
      - VEGAPULL_DATA_PATH=/app/data/vegapull
      - VEGAPULL_IMAGES_PATH=/app/public/images/cards
      - PORT=5000
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-15m}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-10}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost,http://localhost:80}
      - COOKIE_DOMAIN=${COOKIE_DOMAIN:-.polo2409.work}
    volumes:
      # Persistance de la base de données
      - op_game_data:/app/data
      # Backups de la base de données
      - op_game_backups:/app/backups
      # Logs
      - op_game_logs:/app/logs
      # Note: Données Vegapull copiées dans l'image Docker, pas de volume nécessaire
      # Images (optionnel - à monter si disponibles)
      - ./public/images:/app/public/images:ro
    networks:
      - op-game-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - VITE_API_URL=${VITE_API_URL:-/api}
    image: op-game-frontend:latest
    container_name: op-game-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - op-game-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

# Volumes persistants
volumes:
  op_game_data:
    driver: local
  op_game_backups:
    driver: local
  op_game_logs:
    driver: local

# Réseau interne
networks:
  op-game-network:
    driver: bridge